package kodlama.io.Devs.business.concretes;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kodlama.io.Devs.business.abstracts.LanguageService;
import kodlama.io.Devs.business.requests.CreateLanguageRequest;
import kodlama.io.Devs.business.requests.DeleteLanguageRequest;
import kodlama.io.Devs.business.requests.FindByIdLanguageRequest;
import kodlama.io.Devs.business.requests.UptadeLanguageRequest;
import kodlama.io.Devs.business.responses.GetAllLanguagesResponse;
import kodlama.io.Devs.dataAccess.abstracts.LanguageRepository;
import kodlama.io.Devs.entities.concretes.Language;



@Service
public class LanguageManager implements LanguageService {

	private LanguageRepository languageRepository;
	
	@Autowired
	public LanguageManager(LanguageRepository languageRepository) {
		this.languageRepository = languageRepository;
	}

	@Override
	public List<GetAllLanguagesResponse> getAll() {
		List<Language> languages = languageRepository.findAll();
		List<GetAllLanguagesResponse> getAllLanguagesResponses = new ArrayList<GetAllLanguagesResponse>();
		
		for (Language language : languages) {
			GetAllLanguagesResponse languagesResponse = new GetAllLanguagesResponse();
			
			languagesResponse.setId(language.getId());
			languagesResponse.setName(language.getName());		
			
			getAllLanguagesResponses.add(languagesResponse);
			
		}
		
		return getAllLanguagesResponses;
	}

	@Override
	public void add(CreateLanguageRequest createLanguageRequest) {
		
		Language language = new Language();
		language.setName(createLanguageRequest.getName());
		
		this.languageRepository.save(language);


		
	}

	@Override
	public void delete(DeleteLanguageRequest deleteLanguageRequest) {
		Language language = new Language();
		language.setName(deleteLanguageRequest.getName());	
		
	}

	@Override
	public void uptade(UptadeLanguageRequest uptadeLanguageRequest) {
		Language language = new Language();
		language.setName(uptadeLanguageRequest.getName());
		
		
		
	}

	@Override
	public Language findById(FindByIdLanguageRequest findByIdLanguageRequest, int id) {
		Language language = new Language();
		language.setId(findByIdLanguageRequest.getId());
		return language;
	}

	
	
    

}
